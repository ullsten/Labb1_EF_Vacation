// <auto-generated />
using System;
using Labb1_EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb1_EF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230420202023_12")]
    partial class _12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb1_EF.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Labb1_EF.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Labb1_EF.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfHire")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("AddressId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Labb1_EF.Models.LeaveApplicationList", b =>
                {
                    b.Property<int>("LeaveApplicationListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveApplicationListId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FK_EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("FK_LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LeaveApplicationListId");

                    b.HasIndex("FK_EmployeeId");

                    b.HasIndex("FK_LeaveTypeId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("Labb1_EF.Models.LeaveType", b =>
                {
                    b.Property<int>("LeaveTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveTypeId"));

                    b.Property<string>("LeaveTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeaveTypeId");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("Labb1_EF.Models.PersonnelOffice", b =>
                {
                    b.Property<int>("PersonnelOfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonnelOfficeId"));

                    b.Property<int>("FK_AddressId")
                        .HasColumnType("int");

                    b.Property<int>("FK_DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("FK_EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FK_LeaveApplicationListId")
                        .HasColumnType("int");

                    b.Property<int?>("LeaveApplicationsLeaveApplicationListId")
                        .HasColumnType("int");

                    b.HasKey("PersonnelOfficeId");

                    b.HasIndex("FK_AddressId");

                    b.HasIndex("FK_DepartmentId");

                    b.HasIndex("FK_EmployeeId");

                    b.HasIndex("LeaveApplicationsLeaveApplicationListId");

                    b.ToTable("PersonnelOffices");
                });

            modelBuilder.Entity("Labb1_EF.Models.Employee", b =>
                {
                    b.HasOne("Labb1_EF.Models.Address", null)
                        .WithMany("Employees")
                        .HasForeignKey("AddressId");

                    b.HasOne("Labb1_EF.Models.Department", null)
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("Labb1_EF.Models.LeaveApplicationList", b =>
                {
                    b.HasOne("Labb1_EF.Models.Employee", "Employees")
                        .WithMany("LeaveApplications")
                        .HasForeignKey("FK_EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1_EF.Models.LeaveType", "LeaveTypes")
                        .WithMany("LeaveApplications")
                        .HasForeignKey("FK_LeaveTypeId");

                    b.Navigation("Employees");

                    b.Navigation("LeaveTypes");
                });

            modelBuilder.Entity("Labb1_EF.Models.PersonnelOffice", b =>
                {
                    b.HasOne("Labb1_EF.Models.Address", "Addresses")
                        .WithMany()
                        .HasForeignKey("FK_AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1_EF.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("FK_DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1_EF.Models.Employee", "Employees")
                        .WithMany("personnelOffice")
                        .HasForeignKey("FK_EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1_EF.Models.LeaveApplicationList", "LeaveApplications")
                        .WithMany()
                        .HasForeignKey("LeaveApplicationsLeaveApplicationListId");

                    b.Navigation("Addresses");

                    b.Navigation("Departments");

                    b.Navigation("Employees");

                    b.Navigation("LeaveApplications");
                });

            modelBuilder.Entity("Labb1_EF.Models.Address", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Labb1_EF.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Labb1_EF.Models.Employee", b =>
                {
                    b.Navigation("LeaveApplications");

                    b.Navigation("personnelOffice");
                });

            modelBuilder.Entity("Labb1_EF.Models.LeaveType", b =>
                {
                    b.Navigation("LeaveApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
